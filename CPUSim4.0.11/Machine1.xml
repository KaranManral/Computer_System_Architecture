<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Machine1" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OP16" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Field67fbf4a7">
	</Field>
	<Field name="OP4" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field701871c7">
	</Field>
	<Field name="ADDR12" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field9532b7b">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register395cdf57" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register264fca4b" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register762270be" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register7b2895a3" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register24d15bf6" />
	<Register name="INPR" width="8" initialValue="0" readOnly="false" id="model.module.Register7c94d0b5" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register19d6f819" />
	<Register name="OUTR" width="8" initialValue="0" readOnly="false" id="model.module.Register266ce30d" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register8cc12dd" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register7c3f4660" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register3d8aa661" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="E" bit="0" register="model.module.Register7b2895a3" halt="false" id="model.module.ConditionBit55b801f7" />
	<ConditionBit name="S" bit="0" register="model.module.Register7c3f4660" halt="true" id="model.module.ConditionBit3c86ee7b" />

	<!--............. rams ..........................-->
	<RAM name="M" length="4096" cellSize="16" id="model.module.RAM3a8cb3cd" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Register395cdf57" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet4c016cf4" />
	<Set name="E&lt;-0" register="model.module.Register7b2895a3" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet13ccbc62" />
	<Set name="S&lt;-1" register="model.module.Register7c3f4660" start="0" numBits="1" value="1" id="model.microinstruction.CpusimSet2c345263" />

	<!--............. test ..........................-->
	<Test name="IF AC(15)=0" register="model.module.Register395cdf57" start="15" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test16cb05a4" />
	<Test name="IF AC(15)=1" register="model.module.Register395cdf57" start="15" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test516abd45" />
	<Test name="IF AC=0" register="model.module.Register395cdf57" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test273334a6" />
	<Test name="IF DR=0" register="model.module.Register762270be" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test291add69" />
	<Test name="IF E=0" register="model.module.Register7b2895a3" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test67320bcb" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Register395cdf57" delta="1" id="model.microinstruction.Increment63b612fd" />
	<Increment name="AR&lt;-AR+1" register="model.module.Register264fca4b" delta="1" id="model.microinstruction.Increment5d9e8c29" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register762270be" delta="1" id="model.microinstruction.Increment2210f366" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register8cc12dd" delta="1" id="model.microinstruction.Increment558bd8bc" />

	<!--............. shift .........................-->
	<Shift name="AC&lt;-SHL AC" type="logical" source="model.module.Register395cdf57" destination="model.module.Register395cdf57" direction="left" distance="1" id="model.microinstruction.Shifta017f78" />
	<Shift name="AC&lt;-SHR AC" type="logical" source="model.module.Register395cdf57" destination="model.module.Register395cdf57" direction="right" distance="1" id="model.microinstruction.Shift14418bc" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Register395cdf57" source2="model.module.Register395cdf57" destination="model.module.Register395cdf57" id="model.microinstruction.Logical1828e387" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Register395cdf57" source2="model.module.Register762270be" destination="model.module.Register395cdf57" id="model.microinstruction.Logical390889c6" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register7b2895a3" source2="model.module.Register7b2895a3" destination="model.module.Register7b2895a3" id="model.microinstruction.Logical2d21eb78" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR,E&lt;-COUT" type="ADD" source1="model.module.Register395cdf57" source2="model.module.Register762270be" destination="model.module.Register395cdf57" carryBit="model.module.ConditionBit55b801f7" id="model.microinstruction.Arithmetic29dd6343" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register7b2895a3" srcStartBit="0" dest="model.module.Register395cdf57" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR76369924" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register7b2895a3" srcStartBit="0" dest="model.module.Register395cdf57" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoRb0d689d" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register762270be" srcStartBit="0" dest="model.module.Register395cdf57" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR295538af" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="model.module.Register19d6f819" srcStartBit="0" dest="model.module.Register264fca4b" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR6bd081bd" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register8cc12dd" srcStartBit="0" dest="model.module.Register264fca4b" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR29edca5a" />
	<TransferRtoR name="E&lt;-TR(0)" source="model.module.Register3d8aa661" srcStartBit="0" dest="model.module.Register7b2895a3" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR49c4167a" />
	<TransferRtoR name="E&lt;-TR(15)" source="model.module.Register3d8aa661" srcStartBit="15" dest="model.module.Register7b2895a3" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR49d4dfad" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register264fca4b" srcStartBit="0" dest="model.module.Register8cc12dd" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR26e66243" />
	<TransferRtoR name="TR(0)&lt;-AC(0)" source="model.module.Register395cdf57" srcStartBit="0" dest="model.module.Register3d8aa661" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR5761dede" />
	<TransferRtoR name="TR(15)&lt;-AC(15)" source="model.module.Register395cdf57" srcStartBit="15" dest="model.module.Register3d8aa661" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR65622780" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR" ir="model.module.Register19d6f819" id="model.microinstruction.Decode619ed3df" />

	<!--............. set condition bit .............-->
	<!-- none -->

	<!--............. io ............................-->
	<IO name="INP" direction="input" type="integer" buffer="model.module.Register395cdf57" connection="[Console]" id="model.microinstruction.IO8006e50" />
	<IO name="OUT" direction="output" type="integer" buffer="model.module.Register395cdf57" connection="[Console]" id="model.microinstruction.IO67c6e14a" />

	<!--............. memory access .................-->
	<MemoryAccess name="AR&lt;-M[AR]" direction="read" memory="model.module.RAM3a8cb3cd" data="model.module.Register264fca4b" address="model.module.Register264fca4b" id="model.microinstruction.MemoryAccess72a7638b" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM3a8cb3cd" data="model.module.Register762270be" address="model.module.Register264fca4b" id="model.microinstruction.MemoryAccess6530562b" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM3a8cb3cd" data="model.module.Register19d6f819" address="model.module.Register264fca4b" id="model.microinstruction.MemoryAccess6ec9c633" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM3a8cb3cd" data="model.module.Register395cdf57" address="model.module.Register264fca4b" id="model.microinstruction.MemoryAccess3e55a611" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM3a8cb3cd" data="model.module.Register762270be" address="model.module.Register264fca4b" id="model.microinstruction.MemoryAccess7727316b" />
	<MemoryAccess name="M[AR]&lt;-PC" direction="write" memory="model.module.RAM3a8cb3cd" data="model.module.Register8cc12dd" address="model.module.Register264fca4b" id="model.microinstruction.MemoryAccess1041b0aa" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End301904cf" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR29edca5a" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6ec9c633" />
		<Microinstruction microRef="model.microinstruction.Increment558bd8bc" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR6bd081bd" />
		<Microinstruction microRef="model.microinstruction.Decode619ed3df" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="SZE" opcode="e002" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#eaaeb4" assemblyColors="#eaaeb4" >
		<Microinstruction microRef="model.microinstruction.Test67320bcb" />
		<Microinstruction microRef="model.microinstruction.Increment558bd8bc" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="e004" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#b495bc" assemblyColors="#b495bc" >
		<Microinstruction microRef="model.microinstruction.Test273334a6" />
		<Microinstruction microRef="model.microinstruction.Increment558bd8bc" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="e008" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#d2acef" assemblyColors="#d2acef" >
		<Microinstruction microRef="model.microinstruction.Test516abd45" />
		<Microinstruction microRef="model.microinstruction.Increment558bd8bc" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="e010" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#e18482" assemblyColors="#e18482" >
		<Microinstruction microRef="model.microinstruction.Test16cb05a4" />
		<Microinstruction microRef="model.microinstruction.Increment558bd8bc" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="e040" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#a6afc8" assemblyColors="#a6afc8" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR65622780" />
		<Microinstruction microRef="model.microinstruction.Shifta017f78" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR76369924" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR49d4dfad" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="e020" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#ada180" assemblyColors="#ada180" >
		<Microinstruction microRef="model.microinstruction.Increment63b612fd" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="e080" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#d6dfb9" assemblyColors="#d6dfb9" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR5761dede" />
		<Microinstruction microRef="model.microinstruction.Shift14418bc" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRb0d689d" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR49c4167a" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="e100" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#fb8ca3" assemblyColors="#fb8ca3" >
		<Microinstruction microRef="model.microinstruction.Logical2d21eb78" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="e400" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#bfebcf" assemblyColors="#bfebcf" >
		<Microinstruction microRef="model.microinstruction.CpusimSet13ccbc62" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="e800" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#c0fbfc" assemblyColors="#c0fbfc" >
		<Microinstruction microRef="model.microinstruction.CpusimSet4c016cf4" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="e200" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#c5bfc6" assemblyColors="#c5bfc6" >
		<Microinstruction microRef="model.microinstruction.Logical1828e387" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#94a4b6" assemblyColors="#94a4b6" >
		<Microinstruction microRef="model.microinstruction.IO67c6e14a" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#cca2d3" assemblyColors="#cca2d3" >
		<Microinstruction microRef="model.microinstruction.IO8006e50" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="ISZ_I" opcode="d" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#ed9581 #94dae3" assemblyColors="#ed9581 #94dae3" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess72a7638b" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6530562b" />
		<Microinstruction microRef="model.microinstruction.Increment2210f366" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7727316b" />
		<Microinstruction microRef="model.microinstruction.Test291add69" />
		<Microinstruction microRef="model.microinstruction.Increment558bd8bc" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="9" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#f7f4e3 #c8bfa2" assemblyColors="#f7f4e3 #c8bfa2" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess72a7638b" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR26e66243" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="7" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#dbcf97 #d3ecfd" assemblyColors="#dbcf97 #d3ecfd" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess72a7638b" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess3e55a611" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="5" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#dddda6 #bfebda" assemblyColors="#dddda6 #bfebda" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess72a7638b" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6530562b" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR295538af" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="3" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#ddf5c4 #eaacb2" assemblyColors="#ddf5c4 #eaacb2" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess72a7638b" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6530562b" />
		<Microinstruction microRef="model.microinstruction.Arithmetic29dd6343" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="1" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#a8a5c4 #dedde7" assemblyColors="#a8a5c4 #dedde7" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess72a7638b" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6530562b" />
		<Microinstruction microRef="model.microinstruction.Logical390889c6" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="c" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#9cbea8 #e59eee" assemblyColors="#9cbea8 #e59eee" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess6530562b" />
		<Microinstruction microRef="model.microinstruction.Increment2210f366" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7727316b" />
		<Microinstruction microRef="model.microinstruction.Test291add69" />
		<Microinstruction microRef="model.microinstruction.Increment558bd8bc" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="8" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#bbbaae #dcf7b5" assemblyColors="#bbbaae #dcf7b5" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR26e66243" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="6" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#e1fb87 #c3988c" assemblyColors="#e1fb87 #c3988c" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess3e55a611" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="4" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#e9b79c #babad3" assemblyColors="#e9b79c #babad3" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess6530562b" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR295538af" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="2" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#fcf58f #c4cbeb" assemblyColors="#fcf58f #c4cbeb" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess6530562b" />
		<Microinstruction microRef="model.microinstruction.Arithmetic29dd6343" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="e001" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#96c4a4" assemblyColors="#96c4a4" >
		<Microinstruction microRef="model.microinstruction.CpusimSet2c345263" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OP4 ADDR12" assemblyFormat="OP4 ADDR12" instructionColors="#e3bedd #afbbb3" assemblyColors="#e3bedd #afbbb3" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess6530562b" />
		<Microinstruction microRef="model.microinstruction.Logical390889c6" />
		<Microinstruction microRef="model.microinstruction.End301904cf" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM3a8cb3cd" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
